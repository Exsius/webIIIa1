{"ast":null,"code":"var _jsxFileName = \"/usr/app/src/Context/User.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState, useEffect } from 'react';\nimport { getMovies } from '../Api/MovieAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserContext = /*#__PURE__*/createContext({\n  favorites: []\n});\nexport const useUser = () => {\n  _s();\n  return useContext(UserContext);\n};\n_s(useUser, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nconst UserProvider = props => {\n  _s2();\n  const [user, setUser] = useState({\n    favorites: [],\n    ratings: []\n  });\n  const [movies, setMovies] = useState([]);\n  const [title, setTitle] = useState('');\n  const [genres, setGenres] = useState([]);\n  const [yearRange, setYearRange] = useState([1928, 2023]);\n  const [ratingRange, setRatingRange] = useState([0, 10]);\n  const fetchMovies = () => {\n    getMovies().then(res => {\n      setMovies(res);\n    });\n  };\n  const getMovie = id => {\n    const movie = movies.find(movie => movie.id == parseInt(id));\n    // stupid fix\n    return movie == null ? 'loading' : movie;\n  };\n  const addFavorite = id => {\n    if (!user.favorites.some(fav => fav.id === id)) {\n      const movie = movies.find(movie => movie.id === id);\n      setUser({\n        ...user,\n        favorites: [...user.favorites, {\n          id: id,\n          poster: `https://image.tmdb.org/t/p/w92${movie.poster}`,\n          title: movie.title,\n          tagline: movie.tagline\n        }]\n      });\n    }\n  };\n  const removeFavorite = id => {\n    setUser({\n      ...user,\n      favorites: user.favorites.filter(favorite => favorite.id !== id)\n    });\n  };\n  const addRating = (id, rate) => {\n    if (user.ratings.some(rat => rat.id === parseInt(id))) {\n      setUser({\n        ...user,\n        ratings: user.ratings.map(rat => rat.id === parseInt(id) ? {\n          id: parseInt(id),\n          rate: rate\n        } : rat)\n      });\n    } else {\n      setUser({\n        ...user,\n        ratings: [...user.ratings, {\n          id: parseInt(id),\n          rate: rate\n        }]\n      });\n    }\n  };\n  const getRating = id => {\n    if (user.ratings.length > 0) {\n      var _user$ratings$find;\n      return (_user$ratings$find = user.ratings.find(rat => rat.id === parseInt(id))) === null || _user$ratings$find === void 0 ? void 0 : _user$ratings$find.rate;\n    } else {\n      return 0;\n    }\n  };\n  const toggleFavorite = id => {\n    if (user.favorites.some(fav => fav.id === id)) {\n      setUser({\n        ...user,\n        favorites: user.favorites.filter(fav => fav.id !== id)\n      });\n    } else {\n      const movie = movies.find(movie => movie.id === id);\n      setUser({\n        ...user,\n        favorites: [...user.favorites, {\n          id: id,\n          poster: `https://image.tmdb.org/t/p/w92${movie.poster}`,\n          title: movie.title,\n          tagline: movie.tagline\n        }]\n      });\n    }\n  };\n  const toggleGenre = genre => {\n    if (genres.some(gen => gen === genre)) {\n      setGenres(genres.filter(gen => gen !== genre));\n    } else {\n      if (Array.isArray(genre)) {\n        setGenres([...genres, ...genre]);\n      } else {\n        setGenres([...genres, genre]);\n      }\n    }\n  };\n  const clearGenres = () => {\n    setGenres([]);\n  };\n  const value = {\n    user,\n    movies,\n    title,\n    genres,\n    yearRange,\n    setYearRange,\n    ratingRange,\n    setRatingRange,\n    setTitle,\n    addRating,\n    getRating,\n    addFavorite,\n    removeFavorite,\n    toggleFavorite,\n    fetchMovies,\n    getMovie,\n    toggleGenre,\n    clearGenres\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: value,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n};\n_s2(UserProvider, \"BTevjPDnafMYNG01tOMS99oe2yw=\");\n_c = UserProvider;\nexport default UserProvider;\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["createContext","useContext","useState","useEffect","getMovies","UserContext","favorites","useUser","UserProvider","props","user","setUser","ratings","movies","setMovies","title","setTitle","genres","setGenres","yearRange","setYearRange","ratingRange","setRatingRange","fetchMovies","then","res","getMovie","id","movie","find","parseInt","addFavorite","some","fav","poster","tagline","removeFavorite","filter","favorite","addRating","rate","rat","map","getRating","length","toggleFavorite","toggleGenre","genre","gen","Array","isArray","clearGenres","value","children"],"sources":["/usr/app/src/Context/User.js"],"sourcesContent":["\nimport { createContext, useContext, useState, useEffect } from 'react'\nimport { getMovies } from '../Api/MovieAPI'\n\nconst UserContext = createContext({\n    favorites: [],\n})\n\nexport const useUser = () => (\n    useContext(UserContext)\n)\n\nconst UserProvider = (props) => {\n\n    const [user, setUser] = useState({\n        favorites: [],\n        ratings: [],\n    })\n\n    const [movies, setMovies] = useState([])\n    const [title, setTitle] = useState('')\n    const [genres, setGenres] = useState([])\n    const [yearRange, setYearRange] = useState([1928,2023])\n    const [ratingRange, setRatingRange] = useState([0,10])\n\n    const fetchMovies = () => {\n        getMovies().then(res => {\n            setMovies(res)\n        })\n    }\n\n    const getMovie = (id) => {\n        const movie = movies.find(movie => movie.id == parseInt(id))\n        // stupid fix\n        return movie == null ? 'loading' : movie\n    }\n\n    const addFavorite = (id) => {\n        if (!user.favorites.some(fav => fav.id === id)) {\n            const movie = movies.find(movie => movie.id === id)\n            setUser({...user, favorites: [...user.favorites, { id: id, poster: `https://image.tmdb.org/t/p/w92${movie.poster}`, title: movie.title, tagline: movie.tagline }]})\n        }\n    }\n\n    const removeFavorite = (id) => {\n        setUser({...user, favorites: user.favorites.filter(favorite => favorite.id !== id)})\n    }\n\n    const addRating = (id, rate) => {\n        if (user.ratings.some(rat => rat.id === parseInt(id))) {\n            setUser({...user, ratings: user.ratings.map((rat => rat.id === parseInt(id) ? { id: parseInt(id), rate: rate } : rat))})\n        } else {\n            setUser({...user, ratings: [...user.ratings, { id: parseInt(id), rate: rate }]})\n        }\n    }\n\n    const getRating = (id) => {\n        if (user.ratings.length > 0) {\n            return user.ratings.find(rat => rat.id === parseInt(id))?.rate\n        } else {\n            return 0\n        }\n    }\n\n    const toggleFavorite = (id) => {\n        if (user.favorites.some(fav => fav.id === id)) {\n            setUser({...user, favorites: user.favorites.filter(fav => fav.id !== id)})\n        } else {\n            const movie = movies.find(movie => movie.id === id)\n            setUser({...user, favorites: [...user.favorites, { id: id, poster: `https://image.tmdb.org/t/p/w92${movie.poster}`, title: movie.title, tagline: movie.tagline }]})\n        }\n    }\n\n    const toggleGenre = (genre) => {\n        if (genres.some(gen => gen === genre)) {\n            setGenres(genres.filter(gen => gen !== genre))\n        } else {\n            if (Array.isArray(genre)) {\n                setGenres([...genres, ...genre])\n            } else {\n                setGenres([...genres, genre])\n            }\n        }\n    }\n\n    const clearGenres = () => {\n        setGenres([])\n    }\n\n    const value = {\n        user,\n        movies,\n        title,\n        genres,\n        yearRange,\n        setYearRange,\n        ratingRange,\n        setRatingRange,\n        setTitle,\n        addRating,\n        getRating,\n        addFavorite,\n        removeFavorite,\n        toggleFavorite,\n        fetchMovies,\n        getMovie,\n        toggleGenre,\n        clearGenres,\n    }\n\n    return (\n    <UserContext.Provider value={value}>\n        {props.children}\n    </UserContext.Provider>\n    )\n}\n\nexport default UserProvider"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
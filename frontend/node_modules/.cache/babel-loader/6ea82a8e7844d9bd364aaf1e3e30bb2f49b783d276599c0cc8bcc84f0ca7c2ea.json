{"ast":null,"code":"const MovieAPI = () => {};\n_c = MovieAPI;\nexport const getMovies = () => {\n  const movies = localStorage.getItem('movies');\n  if (!movies) {\n    fetch('/movies.json', {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    }).then(res => localStorage.setItem('movies', res.json())).then(() => localStorage.getItem('movies'));\n  } else {\n    return localStorage.getItem('movies');\n  }\n};\nexport const getMovie = id => fetch('/movies.json', {\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  }\n}).then(res => localStorage.setItem('movies', res.json()));\nexport const getHeroes = size =>\n// w92, w154, w185, w342, w500, or w780\nfetch('/movies.json', {\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  }\n}).then(res => localStorage.setItem('movies', res.json())).then(res => res.map(movie => ({\n  title: movie.title,\n  url: `https://image.tmdb.org/t/p/${size}${movie.backdrop}`\n})));\nexport default MovieAPI;\nvar _c;\n$RefreshReg$(_c, \"MovieAPI\");","map":{"version":3,"names":["MovieAPI","getMovies","movies","localStorage","getItem","fetch","headers","then","res","setItem","json","getMovie","id","getHeroes","size","map","movie","title","url","backdrop"],"sources":["/usr/app/src/Api/MovieAPI.js"],"sourcesContent":["\nconst MovieAPI = () => {\n\n}\n\nexport const getMovies = () => {\n    const movies = localStorage.getItem('movies')\n    if (!movies) {\n        fetch('/movies.json', {\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            }\n        }).then(res => localStorage.setItem('movies', res.json())).then(() => localStorage.getItem('movies'))\n    } else {\n        return localStorage.getItem('movies')\n    }\n}\n\nexport const getMovie = (id) => (\n    fetch('/movies.json', {\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n        }\n    }).then(res => localStorage.setItem('movies', res.json()))\n)\n\nexport const getHeroes = (size) => (\n    // w92, w154, w185, w342, w500, or w780\n    fetch('/movies.json', {\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n        }\n    }).then(res => localStorage.setItem('movies', res.json())).then((res) => (\n        res.map((movie) => ({title: movie.title, url: `https://image.tmdb.org/t/p/${size}${movie.backdrop}`}))\n    ))\n)\n\nexport default MovieAPI"],"mappings":"AACA,MAAMA,QAAQ,GAAG,MAAM,CAEvB,CAAC;AAAA,KAFKA,QAAQ;AAId,OAAO,MAAMC,SAAS,GAAG,MAAM;EAC3B,MAAMC,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;EAC7C,IAAI,CAACF,MAAM,EAAE;IACTG,KAAK,CAAC,cAAc,EAAE;MAClBC,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClC,QAAQ,EAAE;MACd;IACJ,CAAC,CAAC,CAACC,IAAI,CAACC,GAAG,IAAIL,YAAY,CAACM,OAAO,CAAC,QAAQ,EAAED,GAAG,CAACE,IAAI,EAAE,CAAC,CAAC,CAACH,IAAI,CAAC,MAAMJ,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAC;EACzG,CAAC,MAAM;IACH,OAAOD,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;EACzC;AACJ,CAAC;AAED,OAAO,MAAMO,QAAQ,GAAIC,EAAE,IACvBP,KAAK,CAAC,cAAc,EAAE;EAClBC,OAAO,EAAE;IACL,cAAc,EAAE,kBAAkB;IAClC,QAAQ,EAAE;EACd;AACJ,CAAC,CAAC,CAACC,IAAI,CAACC,GAAG,IAAIL,YAAY,CAACM,OAAO,CAAC,QAAQ,EAAED,GAAG,CAACE,IAAI,EAAE,CAAC,CAC5D;AAED,OAAO,MAAMG,SAAS,GAAIC,IAAI;AAC1B;AACAT,KAAK,CAAC,cAAc,EAAE;EAClBC,OAAO,EAAE;IACL,cAAc,EAAE,kBAAkB;IAClC,QAAQ,EAAE;EACd;AACJ,CAAC,CAAC,CAACC,IAAI,CAACC,GAAG,IAAIL,YAAY,CAACM,OAAO,CAAC,QAAQ,EAAED,GAAG,CAACE,IAAI,EAAE,CAAC,CAAC,CAACH,IAAI,CAAEC,GAAG,IAChEA,GAAG,CAACO,GAAG,CAAEC,KAAK,KAAM;EAACC,KAAK,EAAED,KAAK,CAACC,KAAK;EAAEC,GAAG,EAAG,8BAA6BJ,IAAK,GAAEE,KAAK,CAACG,QAAS;AAAC,CAAC,CAAC,CACxG,CACJ;AAED,eAAenB,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/usr/app/src/Components/List/List.js\",\n  _s = $RefreshSig$();\nimport Paper from \"../Generic/Paper\";\nimport Skeleton from \"../Generic/Skeleton\";\nimport Typography from \"../Generic/Typography\";\nimport Card from \"./Card\";\nimport { useState, useEffect } from \"react\";\nimport Button from \"../Generic/Button\";\nimport { useUser } from \"../../Context/User\";\nimport Popover from \"../Movie/Popover\";\nimport { useSearchParams, useParams, useNavigate } from \"react-router-dom\";\nimport { useTheme } from \"../../Context/Theme\";\nimport Rating from \"../Generic/Rating\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst List = props => {\n  _s();\n  var _activeMovie$details, _activeMovie$ratings, _activeMovie$ratings2, _activeMovie$ratings3, _activeMovie$details2;\n  const theme = useTheme();\n  const user = useUser();\n  const {\n    movies,\n    genres,\n    setTitle,\n    title,\n    yearRange,\n    ratingRange,\n    fetchMovies,\n    getMovie,\n    addRating,\n    getRating,\n    popover,\n    togglePopover,\n    toggleFavorite\n  } = user;\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [cardAmt, setCardAmt] = useState(0);\n  const [activeMovie, setActiveMovie] = useState({});\n  const popoverVisible = popover;\n  const [posterPopover, togglePosterPopover] = useState(false);\n  const [filteredMovies, setFilteredMovies] = useState(movies);\n  // dumb work around\n  const [noMoviesFound, setNoMoviesFound] = useState(false);\n  useEffect(() => {\n    fetchMovies();\n  }, []);\n  useEffect(() => {\n    if (movies.length > 0) {\n      const titleParam = title;\n      const genreParam = genres.filter(genre => genre);\n      const yearParam = yearRange;\n      const ratingParam = ratingRange;\n      let filteredMovies = movies;\n      if (titleParam) {\n        const titleReg = new RegExp(titleParam, 'i');\n        filteredMovies = filteredMovies.filter(movie => titleReg.test(movie.title));\n      }\n      if (genreParam) {\n        const genreReg = new RegExp(genreParam.map((genre, index) => `(${genre})`).join('|'), 'i');\n        filteredMovies = filteredMovies.filter(movie => movie.details.genres && genreReg.test(movie.details.genres.map(genre => genre.name).toString()));\n      }\n      if (yearParam) {\n        filteredMovies = filteredMovies.filter(movie => {\n          const year = parseInt(movie.release_date.substring(0, 4));\n          return year >= yearParam[0] && year <= yearParam[1];\n        });\n      }\n      if (ratingParam) {\n        filteredMovies = filteredMovies.filter(movie => {\n          const rate = movie.ratings.average;\n          return rate >= ratingParam[0] && rate <= ratingParam[1];\n        });\n      }\n      setFilteredMovies(filteredMovies);\n      filteredMovies.length === 0 && movies.length > 0 && setNoMoviesFound(true);\n    }\n  }, [user]);\n  useEffect(() => {\n    if (id) {\n      const movie = getMovie(id);\n      if (movie) {\n        setActiveMovie(movie);\n        togglePopover(true);\n      } else {\n        navigate('/movies');\n      }\n    }\n  }, [user]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex grow flex-col p-1 py-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grow gap-4\",\n      style: {\n        gridTemplateColumns: 'repeat(auto-fill, minmax(250px, 1fr))'\n      },\n      children: [movies.length !== 0 ? filteredMovies.map(movie => /*#__PURE__*/_jsxDEV(Card, {\n        image: `https://image.tmdb.org/t/p/w342${movie.backdrop}`,\n        title: movie.title,\n        caption: `(${movie.release_date.substring(0, 4)})`,\n        subtitle: [`\\$${Intl.NumberFormat('en-US', {\n          notation: \"compact\",\n          maximumFractionDigits: 1\n        }).format(movie.revenue)}`, `${Math.floor(movie.runtime / 60)}h ${movie.runtime % 60}m`, movie.details.genres && movie.details.genres.map(genre => ` ${genre.name}`)],\n        rating: movie.ratings.average / 10,\n        popularity: Math.round(movie.ratings.popularity),\n        id: movie.id,\n        onFavorite: () => {\n          user.toggleFavorite(movie.id);\n        },\n        onView: () => {\n          setActiveMovie(movie);\n          togglePopover();\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col items-end pt-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex w-full\",\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h3\",\n              children: \"Summary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"grow\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: movie.details.overview.length > 250 ? `${movie.details.overview.substring(0, 250)}...` : movie.details.overview\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              setActiveMovie(movie);\n              togglePopover(true);\n            },\n            variant: \"text\",\n            children: \"...More\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }, this)\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this)) : [...Array(10).keys()].map((skeleton, index) => /*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          padding: '0px',\n          overflow: 'hidden',\n          width: '292px',\n          display: 'flex',\n          flexDirection: 'column',\n          flexGrow: 1,\n          maxWidth: '372px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Skeleton, {\n          sx: {\n            height: '288px',\n            margin: '0px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n          sx: {\n            height: '64px',\n            margin: '1rem 16px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n          sx: {\n            height: '140px',\n            margin: '0.1rem 16px 1rem 16px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n          sx: {\n            height: '42px',\n            margin: '0.3rem 16px 1rem 16px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 25\n        }, this)]\n      }, `skeleton-${index}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }, this)), filteredMovies.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flexGrow: 3\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 47\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), noMoviesFound && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"py-36 w-full text-center\",\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h1\",\n        children: \"No movies found :~( \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 31\n    }, this), /*#__PURE__*/_jsxDEV(Popover, {\n      movieid: activeMovie.id,\n      visible: popoverVisible,\n      onClose: () => {\n        togglePopover(false);\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fade-in w-2/3 h-2/3 mt-1 bg-white border border-gray-200 rounded-md drop-shadow-2xl\",\n        style: {\n          backgroundImage: `url('https://image.tmdb.org/t/p/w780${activeMovie.backdrop}')`,\n          backgroundSize: 'cover'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fade-in w-full h-full p-2 rounded-md\",\n          style: {\n            background: 'linear-gradient(180deg, rgba(255,255,255,0) 0%, rgba(255,255,255,0.84) 24%, rgba(255,255,255,0.92) 25%, rgba(255,255,255,1) 100%)'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: user.user.favorites.some(fav => fav.id === activeMovie.id) ? 'filled' : 'outlined',\n              className: \"rounded-full\",\n              onClick: () => {\n                toggleFavorite(activeMovie.id);\n              },\n              children: \"\\u2764\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              className: \"rounded-full close-trigger\",\n              sx: {\n                backgroundColor: 'white',\n                color: theme.primary\n              },\n              onClick: close,\n              children: \"X\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-start py-12 h-full px-6 gap-3\",\n            children: [activeMovie.poster ? /*#__PURE__*/_jsxDEV(\"img\", {\n              onClick: () => {\n                togglePosterPopover(!posterPopover);\n              },\n              src: `https://image.tmdb.org/t/p/w185${activeMovie.poster}`,\n              className: \"rounded-md\",\n              style: {\n                cursor: 'pointer'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 25\n            }, this) : /*#__PURE__*/_jsxDEV(Skeleton, {\n              sx: {\n                height: '70%',\n                width: '64px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex self-stretch flex-col\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex flex-col grow\",\n                children: activeMovie !== 'loading' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h1\",\n                    sx: {\n                      fontSize: '2.4em'\n                    },\n                    children: activeMovie.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 142,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    sx: {\n                      fontSize: '1em'\n                    },\n                    children: activeMovie.tagline\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 143,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle\",\n                    sx: {\n                      fontWeight: 'bold',\n                      fontSize: '1.2em',\n                      paddingTop: '18px'\n                    },\n                    children: [`\\$${Intl.NumberFormat('en-US', {\n                      notation: \"compact\",\n                      maximumFractionDigits: 1\n                    }).format(activeMovie.revenue)} revenue`, `${Math.floor(activeMovie.runtime / 60) === 1 ? +1 + ' hour' : Math.floor(activeMovie.runtime / 60) + ' hours'} and ${activeMovie.runtime % 60 === 1 ? 1 + ' minute' : activeMovie.runtime % 60 + ' minutes'}`].map((sub, index) => sub && `${index !== 0 ? ' / ' : ''}${sub}`)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 144,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex flex-wrap gap-3 pb-4 pt-2\",\n                    children: [(activeMovie === null || activeMovie === void 0 ? void 0 : (_activeMovie$details = activeMovie.details) === null || _activeMovie$details === void 0 ? void 0 : _activeMovie$details.genres) && activeMovie.details.genres.map(genre => /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"h1\",\n                      sx: {\n                        padding: '0px 5px',\n                        margin: '0px'\n                      },\n                      className: \"rounded-full\",\n                      children: genre.name\n                    }, genre.name, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 151,\n                      columnNumber: 49\n                    }, this)), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"h3\",\n                      children: [\"\\uD83C\\uDF7F\", '>', Math.round(activeMovie === null || activeMovie === void 0 ? void 0 : (_activeMovie$ratings = activeMovie.ratings) === null || _activeMovie$ratings === void 0 ? void 0 : _activeMovie$ratings.popularity)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 153,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"h3\",\n                      children: [\"\\u2B50\", activeMovie === null || activeMovie === void 0 ? void 0 : (_activeMovie$ratings2 = activeMovie.ratings) === null || _activeMovie$ratings2 === void 0 ? void 0 : _activeMovie$ratings2.average]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 156,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"h3\",\n                      children: [\"\\uD83D\\uDC64\", activeMovie === null || activeMovie === void 0 ? void 0 : (_activeMovie$ratings3 = activeMovie.ratings) === null || _activeMovie$ratings3 === void 0 ? void 0 : _activeMovie$ratings3.count]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 159,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 149,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    sx: {\n                      fontSize: '1.1em'\n                    },\n                    children: (activeMovie === null || activeMovie === void 0 ? void 0 : (_activeMovie$details2 = activeMovie.details) === null || _activeMovie$details2 === void 0 ? void 0 : _activeMovie$details2.overview) && activeMovie.details.overview\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 163,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex gap-2 pt-3 pb-4\",\n                    children: [/*#__PURE__*/_jsxDEV(Button, {\n                      onClick: () => {\n                        window.location.href = `https://www.imdb.com/title/${activeMovie && activeMovie.imdb_id}`;\n                      },\n                      variant: \"filled\",\n                      className: \"rounded-full\",\n                      sx: {\n                        padding: '0px 16px',\n                        fontWeight: 'bold',\n                        color: 'black',\n                        backgroundColor: theme.imdb,\n                        borderColor: theme.imdb\n                      },\n                      children: \"IMDB\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 165,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      onClick: () => {\n                        window.location.href = `https://www.themoviedb.org/movie/${activeMovie && activeMovie.tmdb_id}`;\n                      },\n                      variant: \"filled\",\n                      className: \"rounded-full\",\n                      sx: {\n                        padding: '0px 16px',\n                        fontWeight: 'bold',\n                        color: '#71c3ab',\n                        backgroundColor: theme.tmdb,\n                        borderColor: theme.tmdb\n                      },\n                      children: \"TMDB\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 166,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 164,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex flex-col gap-2\",\n                  children: [/*#__PURE__*/_jsxDEV(Skeleton, {\n                    sx: {\n                      flexGrow: 1,\n                      height: '64px'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 171,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n                    sx: {\n                      flexGrow: 1,\n                      height: '148px'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 172,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex items-center gap-3 pl-4\",\n                    style: {\n                      borderColor: theme.primary,\n                      borderRadius: '100px',\n                      overflow: 'hidden',\n                      borderWidth: '2px'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      children: \"Share your thoughts, \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 179,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        backgroundColor: theme.primary,\n                        padding: '0px 9px'\n                      },\n                      children: /*#__PURE__*/_jsxDEV(Rating, {\n                        rate: getRating(activeMovie.id),\n                        onClick: rate => {\n                          addRating(id, rate);\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 181,\n                        columnNumber: 45\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 180,\n                      columnNumber: 41\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 178,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"grow\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 184,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Popover, {\n      visible: posterPopover,\n      onClose: () => {\n        togglePosterPopover(false);\n      },\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `https://image.tmdb.org/t/p/w500${activeMovie.poster}`,\n        className: \"rounded-md\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n};\n_s(List, \"YSVSEJVUAiT92Ihg6hzhpSoh0Pc=\", false, function () {\n  return [useTheme, useUser, useParams, useNavigate, useSearchParams];\n});\n_c = List;\nexport default List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["Paper","Skeleton","Typography","Card","useState","useEffect","Button","useUser","Popover","useSearchParams","useParams","useNavigate","useTheme","Rating","List","props","theme","user","movies","genres","setTitle","title","yearRange","ratingRange","fetchMovies","getMovie","addRating","getRating","popover","togglePopover","toggleFavorite","id","navigate","searchParams","setSearchParams","cardAmt","setCardAmt","activeMovie","setActiveMovie","popoverVisible","posterPopover","togglePosterPopover","filteredMovies","setFilteredMovies","noMoviesFound","setNoMoviesFound","length","titleParam","genreParam","filter","genre","yearParam","ratingParam","titleReg","RegExp","movie","test","genreReg","map","index","join","details","name","toString","year","parseInt","release_date","substring","rate","ratings","average","gridTemplateColumns","backdrop","Intl","NumberFormat","notation","maximumFractionDigits","format","revenue","Math","floor","runtime","round","popularity","overview","Array","keys","skeleton","padding","overflow","width","display","flexDirection","flexGrow","maxWidth","height","margin","backgroundImage","backgroundSize","background","favorites","some","fav","backgroundColor","color","primary","close","poster","cursor","fontSize","tagline","fontWeight","paddingTop","sub","count","window","location","href","imdb_id","imdb","borderColor","tmdb_id","tmdb","borderRadius","borderWidth"],"sources":["/usr/app/src/Components/List/List.js"],"sourcesContent":["import Paper from \"../Generic/Paper\"\nimport Skeleton from \"../Generic/Skeleton\"\nimport Typography from \"../Generic/Typography\"\nimport Card from \"./Card\"\nimport { useState, useEffect } from \"react\"\nimport Button from \"../Generic/Button\"\nimport { useUser } from \"../../Context/User\"\nimport Popover from \"../Movie/Popover\"\nimport { useSearchParams, useParams, useNavigate } from \"react-router-dom\"\nimport { useTheme } from \"../../Context/Theme\"\nimport Rating from \"../Generic/Rating\"\n\n\nconst List = (props) => {\n\n    const theme = useTheme()\n    const user = useUser()\n    const { movies, genres, setTitle, title, yearRange, ratingRange, fetchMovies, getMovie, addRating, getRating, popover, togglePopover, toggleFavorite } = user\n    const { id } = useParams()\n    const navigate = useNavigate()\n    const [searchParams, setSearchParams] = useSearchParams()\n\n    const [cardAmt, setCardAmt] = useState(0)\n    const [activeMovie, setActiveMovie] = useState({})\n    const popoverVisible = popover\n    const [posterPopover, togglePosterPopover] = useState(false)\n    const [filteredMovies, setFilteredMovies] = useState(movies)\n    // dumb work around\n    const [noMoviesFound, setNoMoviesFound] = useState(false)\n\n    useEffect(() => {\n        fetchMovies()\n    },[])\n\n    useEffect(() => {\n        if (movies.length > 0) {\n            const titleParam = title\n            const genreParam = genres.filter(genre => genre)\n            const yearParam = yearRange\n            const ratingParam = ratingRange\n            let filteredMovies = movies\n            if (titleParam) {\n                const titleReg = new RegExp(titleParam, 'i')\n                filteredMovies = filteredMovies.filter(movie => titleReg.test(movie.title))\n            }\n            if (genreParam) {\n                const genreReg = new RegExp(genreParam.map((genre, index) => `(${genre})`).join('|'), 'i')\n                filteredMovies = filteredMovies.filter(movie => movie.details.genres && genreReg.test(movie.details.genres.map(genre => genre.name).toString()))\n            }\n            if (yearParam) {\n                filteredMovies = filteredMovies.filter(movie =>  {\n                    const year = parseInt(movie.release_date.substring(0,4))\n                    return year >= yearParam[0] && year <= yearParam[1]\n                })\n            }\n            if (ratingParam) {\n                filteredMovies = filteredMovies.filter(movie =>  {\n                    const rate = movie.ratings.average\n                    return rate >= ratingParam[0] && rate <= ratingParam[1]\n                })\n            }\n            setFilteredMovies(filteredMovies)\n            filteredMovies.length === 0 && movies.length > 0 && setNoMoviesFound(true)\n        }\n    },[user])\n\n    useEffect(() => {\n        if (id) {\n            const movie = getMovie(id)\n            if (movie) {\n                setActiveMovie(movie)\n                togglePopover(true)\n            } else {\n                navigate('/movies')\n            }\n        }\n    },[user])\n\n    return (\n        <div className='flex grow flex-col p-1 py-6'>\n            <div className='grid grow gap-4' style={{ gridTemplateColumns: 'repeat(auto-fill, minmax(250px, 1fr))' }}>\n                {movies.length !== 0 ? filteredMovies.map((movie) => (\n                    <Card\n                    key={movie.id}\n                    image={`https://image.tmdb.org/t/p/w342${movie.backdrop}`}\n                    title={movie.title}\n                    caption={`(${movie.release_date.substring(0, 4)})`}\n                    subtitle={[`\\$${Intl.NumberFormat('en-US', { notation: \"compact\", maximumFractionDigits: 1 }).format(movie.revenue)}`, `${Math.floor(movie.runtime / 60)}h ${movie.runtime % 60}m`, movie.details.genres && movie.details.genres.map((genre) => ` ${genre.name}`)]}\n                    rating={movie.ratings.average / 10}\n                    popularity={Math.round(movie.ratings.popularity)}\n                    id={movie.id}\n                    onFavorite={() => {user.toggleFavorite(movie.id)}}\n                    onView={() => {setActiveMovie(movie); togglePopover()}}\n                    >\n                        <div className='flex flex-col items-end pt-2'>\n                            <div className='flex w-full'>\n                                <Typography variant='h3'>Summary</Typography>\n                                <div className='grow'></div>\n                            </div>\n                            <Typography>\n                                {movie.details.overview.length > 250 ? `${movie.details.overview.substring(0, 250)}...` : movie.details.overview}\n                            </Typography>\n                            <Button onClick={() => {setActiveMovie(movie); togglePopover(true)}} variant='text'>\n                                ...More\n                            </Button>\n                        </div>\n                    </Card>\n                    )\n                )\n                :\n                [...Array(10).keys()].map((skeleton, index) => (\n                    <Paper key={`skeleton-${index}`} sx={{ padding: '0px', overflow: 'hidden', width: '292px', display: 'flex', flexDirection: 'column', flexGrow: 1, maxWidth: '372px' }}>\n                        <Skeleton sx={{ height: '288px', margin: '0px' }}></Skeleton>\n                        <Skeleton sx={{ height: '64px', margin: '1rem 16px' }}></Skeleton>\n                        <Skeleton sx={{ height: '140px', margin: '0.1rem 16px 1rem 16px' }}></Skeleton>\n                        <Skeleton sx={{ height: '42px', margin: '0.3rem 16px 1rem 16px' }}></Skeleton>\n                    </Paper>\n                ))\n                }\n                {filteredMovies.length > 0 && <div style={{flexGrow: 3}}></div>}\n            </div>\n            {noMoviesFound && <div className='py-36 w-full text-center'>\n                <Typography variant='h1'>No movies found :~( </Typography>\n            </div>}\n            <Popover movieid={activeMovie.id} visible={popoverVisible} onClose={() => {togglePopover(false)}}>\n            <div className=\"fade-in w-2/3 h-2/3 mt-1 bg-white border border-gray-200 rounded-md drop-shadow-2xl\" style={{ backgroundImage: `url('https://image.tmdb.org/t/p/w780${activeMovie.backdrop}')`, backgroundSize: 'cover' }}>\n                <div className=\"fade-in w-full h-full p-2 rounded-md\" style={{ background: 'linear-gradient(180deg, rgba(255,255,255,0) 0%, rgba(255,255,255,0.84) 24%, rgba(255,255,255,0.92) 25%, rgba(255,255,255,1) 100%)' }}>\n                    <div className='flex justify-between'>\n                        <Button variant={user.user.favorites.some(fav => fav.id === activeMovie.id) ? 'filled' : 'outlined'} className='rounded-full' onClick={() => {toggleFavorite(activeMovie.id)}}>❤️</Button>\n                        <Button className='rounded-full close-trigger' sx={{ backgroundColor: 'white', color: theme.primary }} onClick={close}>X</Button>\n                    </div>\n                    <div className='flex items-start py-12 h-full px-6 gap-3'>\n                        {activeMovie.poster ?\n                        <img onClick={() => {togglePosterPopover(!posterPopover)}} src={`https://image.tmdb.org/t/p/w185${activeMovie.poster}`} className='rounded-md' style={{ cursor: 'pointer' }}></img>\n                        :\n                        <Skeleton sx={{ height: '70%', width: '64px' }}></Skeleton>\n                        }\n                        <div className='flex self-stretch flex-col'>\n                            <div className='flex flex-col grow'>\n                                {activeMovie !== 'loading' ? \n                                    <>\n                                        <Typography variant='h1' sx={{ fontSize: '2.4em' }}>{activeMovie.title}</Typography>\n                                        <Typography sx={{ fontSize: '1em' }}>{activeMovie.tagline}</Typography>\n                                        <Typography variant='subtitle' sx={{ fontWeight: 'bold', fontSize: '1.2em', paddingTop: '18px' }}>\n                                            {[`\\$${Intl.NumberFormat('en-US', { notation: \"compact\", maximumFractionDigits: 1 }).format(activeMovie.revenue)} revenue`, `${Math.floor(activeMovie.runtime / 60) === 1 ? + 1 + ' hour' : Math.floor(activeMovie.runtime / 60) + ' hours'} and ${activeMovie.runtime % 60 === 1 ? 1+ ' minute' : activeMovie.runtime % 60 + ' minutes'}`].map((sub, index) => (\n                                                sub && `${index !== 0 ? ' / ' : ''}${sub}`\n                                            ))}\n                                        </Typography>\n                                        <div className='flex flex-wrap gap-3 pb-4 pt-2'>\n                                            {activeMovie?.details?.genres && activeMovie.details.genres.map((genre) => (\n                                                <Button key={genre.name} variant='h1' sx={{ padding: '0px 5px', margin: '0px' }} className='rounded-full'>{genre.name}</Button>\n                                            ))}\n                                            <Typography variant='h3'>\n                                                🍿{'>'}{Math.round(activeMovie?.ratings?.popularity)}\n                                            </Typography>\n                                            <Typography variant='h3'>\n                                                ⭐{activeMovie?.ratings?.average}\n                                            </Typography>\n                                            <Typography variant='h3'>\n                                                👤{activeMovie?.ratings?.count}\n                                            </Typography>\n                                        </div>\n                                        <Typography sx={{ fontSize: '1.1em' }}>{activeMovie?.details?.overview && activeMovie.details.overview}</Typography>\n                                        <div className='flex gap-2 pt-3 pb-4'>\n                                            <Button onClick={() => {window.location.href = `https://www.imdb.com/title/${activeMovie && activeMovie.imdb_id}`}} variant='filled' className='rounded-full' sx={{ padding: '0px 16px', fontWeight: 'bold', color: 'black', backgroundColor: theme.imdb, borderColor: theme.imdb }}>IMDB</Button>\n                                            <Button onClick={() => {window.location.href = `https://www.themoviedb.org/movie/${activeMovie && activeMovie.tmdb_id}`}} variant='filled' className='rounded-full' sx={{ padding: '0px 16px', fontWeight: 'bold', color: '#71c3ab', backgroundColor: theme.tmdb, borderColor: theme.tmdb }}>TMDB</Button>\n                                        </div>\n                                    </>\n                                    :\n                                    <div className='flex flex-col gap-2'>\n                                        <Skeleton sx={{ flexGrow: 1, height: '64px'}}></Skeleton>\n                                        <Skeleton sx={{ flexGrow: 1, height: '148px'}}></Skeleton>\n                                    </div>\n                                    }\n                            </div>\n                            <div>\n                                <div className='flex'>\n                                    <div className='flex items-center gap-3 pl-4' style={{ borderColor: theme.primary, borderRadius: '100px', overflow: 'hidden', borderWidth: '2px' }}>\n                                        <Typography>Share your thoughts, </Typography>\n                                        <div style={{ backgroundColor: theme.primary, padding: '0px 9px' }}>\n                                            <Rating rate={getRating(activeMovie.id)} onClick={(rate) => {addRating(id, rate)}} />\n                                        </div>\n                                    </div>\n                                    <div className='grow' />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            </Popover>\n            <Popover visible={posterPopover} onClose={() => {togglePosterPopover(false)}}>\n                <img src={`https://image.tmdb.org/t/p/w500${activeMovie.poster}`} className='rounded-md'></img>\n            </Popover>\n        </div>\n    )\n}\n\nexport default List"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
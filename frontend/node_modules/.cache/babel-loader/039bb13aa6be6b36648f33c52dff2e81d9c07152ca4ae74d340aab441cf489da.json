{"ast":null,"code":"const MovieAPI = () => {};\n_c = MovieAPI;\nexport const getMovies = async () => {\n  const movies = localStorage.getItem('movies');\n  if (!movies) {\n    fetch('/movies.json', {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    }).then(res => res.json()).then(res => {\n      return 'test';\n    });\n  } else {\n    return JSON.parse(localStorage.getItem('movies'));\n  }\n};\nexport const getMovie = async id => {\n  const movies = localStorage.getItem('movies');\n  if (!movies) {\n    fetch('/movies.json', {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    }).then(res => res.json()).then(res => {\n      localStorage.setItem('movies', JSON.stringify(res));\n      return res;\n    });\n  } else {\n    return JSON.parse(localStorage.getItem('movies'));\n  }\n};\nexport const getHeroes = async size => {\n  // w92, w154, w185, w342, w500, or w780\n  const movies = localStorage.getItem('movies');\n  if (!movies) {\n    fetch('/movies.json', {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    }).then(res => res.json()).then(res => {\n      localStorage.setItem('movies', JSON.stringify(res));\n      return res.map(movie => ({\n        title: movie.title,\n        url: `https://image.tmdb.org/t/p/${size}${movie.backdrop}`\n      }));\n    });\n  } else {\n    const movies = JSON.parse(localStorage.getItem('movies'));\n    return movies.map(movie => ({\n      title: movie.title,\n      url: `https://image.tmdb.org/t/p/${size}${movie.backdrop}`\n    }));\n  }\n};\nexport default MovieAPI;\nvar _c;\n$RefreshReg$(_c, \"MovieAPI\");","map":{"version":3,"names":["MovieAPI","getMovies","movies","localStorage","getItem","fetch","headers","then","res","json","JSON","parse","getMovie","id","setItem","stringify","getHeroes","size","map","movie","title","url","backdrop"],"sources":["/usr/app/src/Api/MovieAPI.js"],"sourcesContent":["\nconst MovieAPI = () => {\n\n}\n\nexport const getMovies = async() => {\n    const movies = localStorage.getItem('movies')\n    if (!movies) {\n        fetch('/movies.json', {\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            }\n        })\n        .then(res => (res.json()))\n        .then(res => {\n            return 'test'\n        })\n    } else {\n        return JSON.parse(localStorage.getItem('movies'))\n    }\n}\n\nexport const getMovie = async(id) => {\n    const movies = localStorage.getItem('movies')\n    if (!movies) {\n        fetch('/movies.json', {\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            }\n        })\n        .then(res => (res.json()))\n        .then(res => {\n            localStorage.setItem('movies', JSON.stringify(res))\n            return res\n        })\n    } else {\n        return JSON.parse(localStorage.getItem('movies'))\n    }\n}\n\nexport const getHeroes = async(size) => {\n    // w92, w154, w185, w342, w500, or w780\n    const movies = localStorage.getItem('movies')\n    if (!movies) {\n        fetch('/movies.json', {\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            }\n        })\n        .then(res => (res.json()))\n        .then(res => {\n            localStorage.setItem('movies', JSON.stringify(res))\n            return res.map((movie) => ({title: movie.title, url: `https://image.tmdb.org/t/p/${size}${movie.backdrop}`}))\n        })\n    } else {\n        const movies = JSON.parse(localStorage.getItem('movies'))\n        return movies.map((movie) => ({title: movie.title, url: `https://image.tmdb.org/t/p/${size}${movie.backdrop}`}))\n    }\n}\n\nexport default MovieAPI"],"mappings":"AACA,MAAMA,QAAQ,GAAG,MAAM,CAEvB,CAAC;AAAA,KAFKA,QAAQ;AAId,OAAO,MAAMC,SAAS,GAAG,YAAW;EAChC,MAAMC,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;EAC7C,IAAI,CAACF,MAAM,EAAE;IACTG,KAAK,CAAC,cAAc,EAAE;MAClBC,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClC,QAAQ,EAAE;MACd;IACJ,CAAC,CAAC,CACDC,IAAI,CAACC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAG,CAAC,CACzBF,IAAI,CAACC,GAAG,IAAI;MACT,OAAO,MAAM;IACjB,CAAC,CAAC;EACN,CAAC,MAAM;IACH,OAAOE,IAAI,CAACC,KAAK,CAACR,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAC;EACrD;AACJ,CAAC;AAED,OAAO,MAAMQ,QAAQ,GAAG,MAAMC,EAAE,IAAK;EACjC,MAAMX,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;EAC7C,IAAI,CAACF,MAAM,EAAE;IACTG,KAAK,CAAC,cAAc,EAAE;MAClBC,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClC,QAAQ,EAAE;MACd;IACJ,CAAC,CAAC,CACDC,IAAI,CAACC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAG,CAAC,CACzBF,IAAI,CAACC,GAAG,IAAI;MACTL,YAAY,CAACW,OAAO,CAAC,QAAQ,EAAEJ,IAAI,CAACK,SAAS,CAACP,GAAG,CAAC,CAAC;MACnD,OAAOA,GAAG;IACd,CAAC,CAAC;EACN,CAAC,MAAM;IACH,OAAOE,IAAI,CAACC,KAAK,CAACR,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAC;EACrD;AACJ,CAAC;AAED,OAAO,MAAMY,SAAS,GAAG,MAAMC,IAAI,IAAK;EACpC;EACA,MAAMf,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;EAC7C,IAAI,CAACF,MAAM,EAAE;IACTG,KAAK,CAAC,cAAc,EAAE;MAClBC,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClC,QAAQ,EAAE;MACd;IACJ,CAAC,CAAC,CACDC,IAAI,CAACC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAG,CAAC,CACzBF,IAAI,CAACC,GAAG,IAAI;MACTL,YAAY,CAACW,OAAO,CAAC,QAAQ,EAAEJ,IAAI,CAACK,SAAS,CAACP,GAAG,CAAC,CAAC;MACnD,OAAOA,GAAG,CAACU,GAAG,CAAEC,KAAK,KAAM;QAACC,KAAK,EAAED,KAAK,CAACC,KAAK;QAAEC,GAAG,EAAG,8BAA6BJ,IAAK,GAAEE,KAAK,CAACG,QAAS;MAAC,CAAC,CAAC,CAAC;IACjH,CAAC,CAAC;EACN,CAAC,MAAM;IACH,MAAMpB,MAAM,GAAGQ,IAAI,CAACC,KAAK,CAACR,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAC;IACzD,OAAOF,MAAM,CAACgB,GAAG,CAAEC,KAAK,KAAM;MAACC,KAAK,EAAED,KAAK,CAACC,KAAK;MAAEC,GAAG,EAAG,8BAA6BJ,IAAK,GAAEE,KAAK,CAACG,QAAS;IAAC,CAAC,CAAC,CAAC;EACpH;AACJ,CAAC;AAED,eAAetB,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}